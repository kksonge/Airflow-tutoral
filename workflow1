- test.txt 파일 쓰기 -> 읽기 -> 삭제하는 workflow 만들기
- airflow.cfg에서 dags_folder를 /root/airflow/dags로 수정하고 해당 폴더에서 echo_test.py 생성
- Airflow는 파이썬 파일 내의 dag_id를 이용하여 등록하기 때문에 파일 이름은 중요하지 않음

-------------- dags 폴더에 넣는 .py 파일 코드 -----------------

from airflow import models
from airflow.operators.bash_operator import BashOperator
from datetime import datetime, timedelta

default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2022, 1, 1),
    'retries': 1,
    'retry_delay': timedelta(minutes=5)}
  
with models.DAG(
    dag_id='echo_test', description='echo_test',
    schedule_interval=None,
    max_active_runs=5,
    concurrency=10,
    default_args=default_args) as dag:
  
  text_file_path = '/root/airflow/dags'
  
  #### create txt file ####
  create_text_file_command = f'cd {text_file_path} && echo hello airflow > test.txt'
  create_text_file = BashOperator(
      task_id='create_text_file',
      bash_command=create_text_file_command,
      dag=dag)
      
  #### cat txt file ####
  read_text_file_command = f'cd {text_file_path} && cat test.txt'
  read_text_file = BashOperator(
      task_id='cat_text_file',
      bash_command=read_text_file_command,
      dag=dag)
      
  #### remove txt file ####
  remove_text_file_command = f'cd {text_file_path} && rm test.txt'
  remove_text_file = BashOperator(
      task_id='remove_text_file',
      bash_command=remove_text_file_command,
      dag=dag)
    
  #### 작업 순서 ####  
  create_text_file >> read_text_file >> remove_text_file
  
  ------------------------------------------------------------------------
  
  - airflow scheduler 입력 후 웹서버 접속하여 확인하기
  
  
  출처: https://blog.si-analytics.ai/59
 
